class RandomizedSet {
public:
    map<int,int> mp;
    vector<int> arr;
    int n = 0;
    
    RandomizedSet() {}
    
    bool insert(int val) {
        if(mp.find(val) != mp.end()) return false;
        
        if(arr.size() < n+1) {
            arr.push_back(val);
            mp[val] = arr.size()-1;
        }
        else {
            arr[n] = val;
            mp[val] = n;
        }
        n++;
        return true;
    }
    
    bool remove(int val) {
        if(mp.find(val) == mp.end()) return false;
        
        int ind = mp[val];
        swap(arr[ind],arr[n-1]);
        mp[arr[ind]]=ind;
        mp.erase(val);
        n--;
        return true;
    }
    
    int getRandom() {
        int ind = rand() % n;
        return arr[ind];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
